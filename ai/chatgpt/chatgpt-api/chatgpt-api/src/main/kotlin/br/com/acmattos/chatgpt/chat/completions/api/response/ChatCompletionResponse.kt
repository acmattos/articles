package br.com.acmattos.chatgpt.chat.completions.api.response

import br.com.acmattos.chatgpt.chat.completions.api.message.Message
import com.google.gson.annotations.SerializedName

/**
 * Represents a chat completion response returned by model, based on the
 * provided input.
 *
 * @property id a unique identifier for the chat completion.
 * @property choices a list of chat completion choices. Can be more than one if
 *                   <code>n</code> is greater than 1.
 * @property created the Unix timestamp (in seconds) of when the chat
 *                    completion was created.
 * @property model the model used for the chat completion.
 * @property systemFingerprint this fingerprint represents the backend
 *                             configuration that the model runs with.
 *                             Can be used in conjunction with the seed request
 *                             parameter to understand when backend changes
 *                             have been made that might impact determinism.
 * @property obj the object type, which is always chat.completion.
 * @property usage usage statistics for the completion request.
 */
class ChatCompletionResponse(
    val id: String,
    val choices: List<Choice>,
    val created: Int,
    val model: String,
    @SerializedName("system_fingerprint")
    val systemFingerprint: String,
    @SerializedName("object")
    val obj: String,
    val usage: Usage,
)

/**
 * A chat completion choice.
 *
 * @property finishReason the reason the model stopped generating tokens. This
 *                        will be stop if the model hit a natural stop point or
 *                        a provided stop sequence, length if the maximum number
 *                        of tokens specified in the request was reached,
 *                        content_filter if content was omitted due to a flag
 *                        from our content filters, tool_calls if the model
 *                        called a tool, or function_call (deprecated) if the
 *                        model called a function.
 * @property index the index of the choice in the list of choices.
 * @property message a chat completion message generated by the model.
 * @property logprobs log probability information for the choice.
 */
class Choice(
    @SerializedName("finish_reason")
    val finishReason: String,
    val index: Int,
    val message: Message<*>,
    @SerializedName("logprobs")
    val logprobs: Logprobs?
) {
    override fun toString(): String {
        return """Choice(index=$index, message=$message"""
    }
}

/**
 * Log probability information for the choice.
 *
 * @property content a list of message content tokens with log probability
 *                   information.
 */
class Logprobs(
    val content: List<Content>
)

/**
 * A message content tokens with log probability information.
 *
 * @property token the token.
 * @property logprob the log probability of this token, if it is within the top
 *                   20 most likely tokens. Otherwise, the value -9999.0 is used
 *                   to signify that the token is very unlikely.
 * @property bytes a list of integers representing the UTF-8 bytes
 *                 representation of the token. Useful in instances where
 *                 characters are represented by multiple tokens and their byte
 *                 representations must be combined to generate the correct text
 *                 representation. Can be null if there is no bytes
 *                 representation for the token.
 * @property topLogprobs a list of the most likely tokens and their log
 *                       probability, at this token position. In rare cases,
 *                       there may be fewer than the number of requested
 *                       top_logprobs returned.
 */
class Content(
    val token: String,
    val logprob: Double,
    val bytes: List<Int>?,
    @SerializedName("top_logprobs") val topLogprobs: List<TopLogprobs>
)

/**
 * The most likely token and its log probability, at this token position.
 *
 * @property token the token.
 * @property logprob the log probability of this token, if it is within the top
 *                   20 most likely tokens. Otherwise, the value -9999.0 is used
 *                   to signify that the token is very unlikely.
 * @property bytes a list of integers representing the UTF-8 bytes
 *                 representation of the token. Useful in instances where
 *                 characters are represented by multiple tokens and their byte
 *                 representations must be combined to generate the correct text
 *                 representation. Can be null if there is no bytes
 *                 representation for the token.
 */
data class TopLogprobs(
    val token: String,
    val logprob: Double,
    val bytes: List<Int>?
)

/**
 * Usage statistics for the completion request.
 *
 * @property completionTokens number of tokens in the generated completion.
 * @property promptTokens number of tokens in the prompt.
 * @property totalTokens total number of tokens used in the request (prompt +
 *                       completion).
 */
class Usage(
    @SerializedName("completion_tokens") val completionTokens: Int,
    @SerializedName("prompt_tokens") val promptTokens: Int,
    @SerializedName("total_tokens") val totalTokens: Int,
) {
    override fun toString(): String {
        return """
Usage(completionTokens=$completionTokens, promptTokens=$promptTokens, totalTokens=$totalTokens)
        """.trim()
    }
}
